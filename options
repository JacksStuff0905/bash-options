#!/bin/bash

# This script enables options which are conditionals in config files
# to enable syntax add an empty line with <use-options> somwhere in your file
# options syntax: <some-command> will be executed

print_usage() {
    echo "Usage: `basename $0` [file | directory]"
    echo "Examples:"
    echo "  `basename $0` /etc/skel/"
    echo "  `basename $0` ~/.bashrc"
    exit 1
}

script_dir="$(dirname "$(realpath "$0")")"

target=$1


if [ -z $target ]
then
  print_usage
fi



function process_file {
  local file="$1"
  if [ ! -r "$file" ]; then
    return
  fi
  
  if ! cat $file | grep -E '^\s*<use-options>\s*$' &> /dev/null
  then
    return
  fi

  sed -E -i '/^\s*<use-options>\s*$/d' $file
  
  grep -oP "(?<=<)[^<>]+(?=>)" $file | while read line
  do
    echo "$line"
    sed -i "s/<$line>/$($line)/" "$file"
  done
  
}

if [[ "$target" == */ ]]
then
  find "$target" -type f | while read -r file; do
    process_file "$file"
  done
else
  process_file "$target"
fi
