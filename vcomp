#!/bin/bash

# Compare two version numbers

print_usage() {
    echo "Usage: $0 -[g|l|e] version1 version2"
    echo "Options:"
    echo "  -g   Compare if version1 is greater than version2"
    echo "  -l   Compare if version1 is less than version2"
    echo "  -e   Compare if version1 is equal to version2"
    echo "Options can be combined like -ge or -eg but not -gl or -lg"
    exit 1
}


# Compares version A to version B and if A is greater than or equal to B returns 0, otherwise returns 1
function version-gte {
  local version=$($version1 --version | grep -oP "(?<=\bversion\s)\S+")
  if [ $version == $version2 ]
  then
    return 0
  fi
  if [[ $(printf "%s\n" "$version" $version2 | sort -V | head -n 1) != "$version" ]]
  then
      return 1
  fi
  return 0
}

# Compares version A to version B and if A is greater than B returns 0, otherwise returns 1
function version-gt {
  local version=$($version1 --version | grep -oP "(?<=\bversion\s)\S+")
  if [[ $(printf "%s\n" "$version" $version2 | sort -V | head -n 1) != "$version" ]]
  then
      return 1
  fi
  return 0
}

# Compares version A to version B and if A is less than or equal to B returns 0, otherwise returns 1
function version-lte {
  return ! version-gte
}

# Compares version A to version B and if A is less than B returns 0, otherwise returns 1
function version-lt {
  return ! version-gt
}






while getopts "g:l:e:" opt      # get options for -a and -b ( ':' - option has an argument )
do
    case $opt in
        g) mode="${mode}g";;
        l) mode="${mode}l"
            if [[ "$mode" == *g* ]]
            then
                echo "Error: Options g and l can't be used simultaneously"
                print_usage
            ;;
        e) mode="${mode}e";;
    esac
done

shift $((OPTIND -1))

if [[ $# -ne 2 ]]; then
    echo "Error: Exactly two versions must be provided."
    print_usage
fi

version1=$1
version2=$2






if [[ "$mode" == *g* ]]
then
    if [[ "$mode" == *e* ]]
    then
        return version-gte
    else
        return version-gt
    fi
fi

if [[ "$mode" == *l* ]]
then
    if [[ "$mode" == *e* ]]
    then
        return version-lte
    else
        return version-lt
    fi
fi
