#!/bin/bash

# Compare two version numbers

print_usage() {
    echo "Usage: $0 -[g|l|e] version1 version2"
    echo "Options:"
    echo "  -g   Compare if version1 is greater than version2"
    echo "  -l   Compare if version1 is less than version2"
    echo "  -e   Compare if version1 is equal to version2"
    echo "Options can be combined like -ge or -eg but not -gl or -lg"
    exit 1
}


# Compares version A to version B and if A is greater than or equal to B returns 0, otherwise returns 1
function version-gte {
  if [ $1 = $2 ]
  then
    return 0
  fi
  return version-gt "$1" "$2"
}

# Compares version A to version B and if A is greater than B returns 0, otherwise returns 1
function version-gt {
  if [[ $(printf "%s\n" "$1" $2 | sort -V | head -n 1) != "$1" ]]
  then
      return 1
  fi
  return 0
}

# Compares version A to version B and if A is less than or equal to B returns 0, otherwise returns 1
function version-lte {
  return ! version-gt
}

# Compares version A to version B and if A is less than B returns 0, otherwise returns 1
function version-lt {
  return ! version-gte
}

function get-version {
    re='^([0-9]|\.)+$'
    if ! [[ $1 =~ $re ]] ; then
        local version=$($1 --version | grep -oP "(?<=\bversion\s)\S+")
        version1=$version
    fi
    if ! [[ $2 =~ $re ]] ; then
        local version=$($2 --version | grep -oP "(?<=\bversion\s)\S+")
        version2=$version
    fi
}



while getopts "gle" opt      # get options for -a and -b ( ':' - option has an argument )
do
    case $opt in
        g) mode="${mode}g";;
        l) mode="${mode}l"
            if [[ "$mode" == *g* ]]
            then
                echo "Error: Options g and l can't be used simultaneously"
                print_usage
            fi
            ;;
        e) mode="${mode}e";;
    esac
done

shift $((OPTIND -1))

if [[ $# -ne 2 ]]; then
    echo "Error: Exactly two versions must be provided."
    print_usage
fi

version1=$1
version2=$2



get-version "$version1" "$version2"


if [[ "$mode" == *g* ]]
then
    if [[ "$mode" == *e* ]]
    then
        exit version-gte "$version1" "$version2"
    else
        exit version-gt "$version1" "$version2"
    fi
fi

if [[ "$mode" == *l* ]]
then
    if [[ "$mode" == *e* ]]
    then
        exit version-lte "$version1" "$version2"
    else
        exit version-lt "$version1" "$version2"
    fi
fi
